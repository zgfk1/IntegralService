<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czbank.integralservice.dao.ExchangeMapper" >
  <resultMap id="BaseResultMap" type="com.czbank.integralservice.domain.Exchange" >
    <result column="exchange_id" property="exchangeId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="commodity_id" property="commodityId" jdbcType="BIGINT" />
    <result column="exchange_quantity" property="exchangeQuantity" jdbcType="INTEGER" />
    <result column="exchange_time" property="exchangeTime" jdbcType="TIMESTAMP" />
    <result column="amountbefore" property="amountbefore" jdbcType="INTEGER" />
    <result column="amountafter" property="amountafter" jdbcType="INTEGER" />
    <result column="delivery address" property="deliveryAddress" jdbcType="VARCHAR" />
    <result column="user_contact" property="userContact" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    exchange_id, user_id, commodity_id, exchange_quantity, exchange_time, amountbefore, 
    amountafter, "delivery address", user_contact
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.czbank.integralservice.domain.ExchangeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.integralservice.domain.ExchangeExample" >
    delete from exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.integralservice.domain.Exchange" >
    insert into exchange (exchange_id, user_id, commodity_id, 
      exchange_quantity, exchange_time, amountbefore, 
      amountafter, "delivery address", user_contact
      )
    values (#{exchangeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{commodityId,jdbcType=BIGINT}, 
      #{exchangeQuantity,jdbcType=INTEGER}, #{exchangeTime,jdbcType=TIMESTAMP}, #{amountbefore,jdbcType=INTEGER}, 
      #{amountafter,jdbcType=INTEGER}, #{deliveryAddress,jdbcType=VARCHAR}, #{userContact,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.integralservice.domain.Exchange" >
    insert into exchange
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exchangeId != null" >
        exchange_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commodityId != null" >
        commodity_id,
      </if>
      <if test="exchangeQuantity != null" >
        exchange_quantity,
      </if>
      <if test="exchangeTime != null" >
        exchange_time,
      </if>
      <if test="amountbefore != null" >
        amountbefore,
      </if>
      <if test="amountafter != null" >
        amountafter,
      </if>
      <if test="deliveryAddress != null" >
        "delivery address",
      </if>
      <if test="userContact != null" >
        user_contact,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exchangeId != null" >
        #{exchangeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="commodityId != null" >
        #{commodityId,jdbcType=BIGINT},
      </if>
      <if test="exchangeQuantity != null" >
        #{exchangeQuantity,jdbcType=INTEGER},
      </if>
      <if test="exchangeTime != null" >
        #{exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountbefore != null" >
        #{amountbefore,jdbcType=INTEGER},
      </if>
      <if test="amountafter != null" >
        #{amountafter,jdbcType=INTEGER},
      </if>
      <if test="deliveryAddress != null" >
        #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="userContact != null" >
        #{userContact,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.integralservice.domain.ExchangeExample" resultType="java.lang.Integer" >
    select count(*) from exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exchange
    <set >
      <if test="record.exchangeId != null" >
        exchange_id = #{record.exchangeId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.commodityId != null" >
        commodity_id = #{record.commodityId,jdbcType=BIGINT},
      </if>
      <if test="record.exchangeQuantity != null" >
        exchange_quantity = #{record.exchangeQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeTime != null" >
        exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amountbefore != null" >
        amountbefore = #{record.amountbefore,jdbcType=INTEGER},
      </if>
      <if test="record.amountafter != null" >
        amountafter = #{record.amountafter,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryAddress != null" >
        "delivery address" = #{record.deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userContact != null" >
        user_contact = #{record.userContact,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exchange
    set exchange_id = #{record.exchangeId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      commodity_id = #{record.commodityId,jdbcType=BIGINT},
      exchange_quantity = #{record.exchangeQuantity,jdbcType=INTEGER},
      exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      amountbefore = #{record.amountbefore,jdbcType=INTEGER},
      amountafter = #{record.amountafter,jdbcType=INTEGER},
      "delivery address" = #{record.deliveryAddress,jdbcType=VARCHAR},
      user_contact = #{record.userContact,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>